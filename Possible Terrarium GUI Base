import tkinter as tk
from tkinter import ttk
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
from matplotlib.figure import Figure
check = 0
x_data1 = [1, 2, 3, 4, 5]
y_data1 = [2, 4, 6, 8, 10]
x_data2 = [1, 2, 3, 4, 5]
y_data2 = [1, 3, 5, 7, 9]

# Create the main window
root = tk.Tk()
root.title("Graph and Message Board For Plant")

# Create a frame for the graph
graph_frame = ttk.Frame(root)
graph_frame.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)

# Create a figure and axis for the graph
fig = Figure(figsize=(5, 4), dpi=100)
ax = fig.add_subplot(111)
ax.set_xlabel("X-axis")
ax.set_ylabel("Y-axis")
ax.set_xlim(0, 10)
ax.set_ylim(0, 10)

# Create a canvas to display the graph
canvas = FigureCanvasTkAgg(fig, master=graph_frame)
canvas.get_tk_widget().pack(side=tk.TOP, fill=tk.BOTH, expand=True)

# Create a frame for the message board
msg_frame = ttk.Frame(root)
msg_frame.pack(side=tk.RIGHT, fill=tk.BOTH, expand=True)

# Create a label for the message board
msg_label = ttk.Label(msg_frame, text="Messages:")
msg_label.pack(side=tk.TOP, padx=10, pady=10)

# Create a text box to display messages
msg_text = tk.Text(msg_frame, height=20, width=30)
msg_text.pack(side=tk.TOP, padx=10, pady=10)

# Create a button to update the graph
def update_data():
    global x_data2, y_data2, check
    # Update the data for the second line on the graph
    if check:
        check=0
        x_data2 = [1, 2, 3, 4, 5]
        y_data2 = [1, 3, 5, 7, 9]
    else:
        check=1
        x_data2 = [1, 2, 3, 4, 5]
        y_data2 = [0, 2, 4, 6, 8] # new data

    # Update the message board with a new message
    msg_text.insert(tk.END, "Data updated\n")

# Create a button to update the data and redraw the graph
update_button = ttk.Button(root, text="Update Data", command=lambda: [update_data(), canvas.draw()])
update_button.pack(side=tk.BOTTOM, pady=10)

# Create a function to update the graph with new data
def update_graph():
    # Get new data from a data source
    
    # Clear the previous data from the graph
    ax.clear()
    
    # Update the graph with the new data
    ax.plot(x_data1, y_data1)
    ax.plot(x_data2, y_data2)
    canvas.draw()

    # Update the message board with a new message
    msg_text.insert(tk.END, "Plant needs no care as of now\n")

    # Call this function again after 1 second
    root.after(1000, update_graph)

# Start updating the graph
update_graph()

# Start the main loop
root.mainloop()
